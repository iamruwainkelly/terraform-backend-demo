version: '3.8'

services:
  terraform-backend:
    build: .
    container_name: terraform-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - terraform_temp:/app/temp
    networks:
      - terraform-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp
      - /app/temp

  redis:
    image: redis:7-alpine
    container_name: terraform-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - terraform-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: terraform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - terraform-network
    depends_on:
      - terraform-backend

volumes:
  redis_data:
  terraform_temp:

networks:
  terraform-network:
    driver: bridge
